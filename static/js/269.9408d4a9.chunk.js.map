{"version":3,"file":"static/js/269.9408d4a9.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Notification/Notification.js","components/ContactList/ContactList.js","components/pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const getIsLoading = state => state.contacts.contacts.isLoading;\nexport const getError = state => state.contacts.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n   return  contacts.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n)\n","import { useState } from 'react';\nimport { addContact } from '../../redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport styled from '@mui/material/styles/styled';\n\nexport const Form = styled('form')({\n  display: 'flex',\n  gap: 20,\n  alignItems: 'center',\n  justifyContent: 'left',\n});\n\nexport const Button = styled('button')({\n  backgroundColor: 'forestgreen',\n  border: 'none',\n  color: '#fff',\n  borderRadius: 5,\n  cursor: 'pointer',\n  flexDirection: 'column',\n  fontSize: 15,\n  fontWeight: 500,\n  marginRight: 15,\n  padding: '10px 15px',\n  textAlign: 'center',\n  textTransform: 'capitalize',\n  '&:hover': {\n    backgroundColor: 'green',\n  },\n});\nexport const Input = styled('input')({\n  backgroundColor: 'transparent',\n  border: '1px solid darkblue',\n  fontSize: 14,\n  height: 30,\n  lineHeight: 1.14,\n  width: 170,\n  borderRadius: 5,\n});\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleChangeName = event => {\n    const { value } = event.currentTarget;\n    setName(value);\n  };\n\n  const handleChangeNumber = event => {\n    const { value } = event.currentTarget;\n    setNumber(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const duplicate = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (duplicate) return Notify.failure(`${name} is already in contacts`);\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        value={name}\n        onChange={handleChangeName}\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"Name\"\n      />\n      <Input\n        type=\"tel\"\n        value={number}\n        onChange={handleChangeNumber}\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        placeholder=\"Number\"\n      />\n      <Button type=\"submit\">\n        + Add contact\n      </Button>\n    </Form>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts/contactSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport styled from '@mui/material/styles/styled';\n\nexport const Input = styled('input')({\n  backgroundColor: 'transparent',\n  border: '1px solid darkblue',\n  fontSize: '14px',\n  height: ' 30px',\n  lineHeight: '1.14',\n  width: '170px',\n  borderRadius: '5px',\n});\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilter = event => {\n    dispatch(filterContacts(event.target.value));\n  };\n  return (\n    <Input\n      type='text'\n      value={filter}\n      onChange={handleFilter}\n      name='filter'\n      placeholder='Filter'\n    />\n  );\n}\n","\nconst Notification = ({ message }) => {\n  return <div>{message}</div>;\n};\n\nexport default Notification;\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\nimport styled from '@mui/material/styles/styled';\n\nexport const List = styled('ul')({\n  marginTop: '30px',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '10px',\n});\n\nexport const Item = styled('li')({\n  alignItems: 'center',\n  display: 'flex',\n  width: '500px',\n  gap: '10px',\n});\nconst Button = styled('button')({\n  cursor: 'pointer',\n  padding: '6px 6px',\n  backgroundColor: 'orangered',\n  color: 'white',\n  fontWeight: 500,\n  borderRadius: 5,\n  border: 'none',\n  display: 'flex',\n  justifyContent: 'flex-end',\n  '&:hover': {\n    backgroundColor: 'red',\n  },\n});\nexport const Name = styled('span')({\n  fontWeight: 'bold',\n  color: 'midnightblue',\n});\n\nexport const Information = styled('div')({\n  border: '1px midnightblue solid',\n  padding: '3px',\n  borderRadius: '5px',\n  alignItems: 'center',\n  display: 'flex',\n  gap: '10px',\n});\n\nconst Img = styled('img')({\n  width: 25,\n});\n\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {filteredContacts.map(contact => {\n        return (\n          <Item key={contact.id}>\n            <Information>\n              <Img\n                src={'https://cdn-icons-png.flaticon.com/512/2354/2354573.png'}\n                alt=\"icon\"\n              />\n              <Name>{contact.name}</Name> {contact.number}\n            </Information>\n            <Button\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(contact.id))}\n            >\n              Delete\n            </Button>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from '../ContactForm/ContactForm';\nimport { Filter } from '../Filter/Filter';\nimport Notification from '../Notification/Notification';\nimport ContactList from '../ContactList/ContactList';\nimport Loader from '../Loader/Loader';\nimport { getError, getIsLoading, selectContacts } from '../../redux/contacts/selectors';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { Notify } from 'notiflix';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const error = useSelector(getError);\n\n  useEffect(()=>{\n    dispatch(fetchContacts())\n  },[dispatch])\n\n  useEffect(()=>{\n    if (error) return Notify.failure(`${error}`);\n  },[error])\n\n\n  const contacts = useSelector(selectContacts);\n  const loading = useSelector(getIsLoading);\n\n  return (\n    <>\n      <main>\n        <div><h1>PhoneBook</h1>\n        <ContactForm />\n         <h2>Contacts</h2>\n          {contacts.length === 0 ? (\n            <Notification message=\"There is no contacts\" />\n          ) : (\n            <div>\n              <Filter />\n              {loading ? <Loader/>: <ContactList />}\n            </div>\n          )}\n      </div>\n         </main>\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","getIsLoading","isLoading","getError","error","selectVisibleContacts","createSelector","item","name","toLowerCase","includes","Form","styled","display","gap","alignItems","justifyContent","Button","backgroundColor","border","color","borderRadius","cursor","flexDirection","fontSize","fontWeight","marginRight","padding","textAlign","textTransform","Input","height","lineHeight","width","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","reset","onSubmit","event","preventDefault","some","contact","Notify","addContact","type","value","onChange","currentTarget","pattern","title","required","placeholder","Filter","filterContacts","target","message","List","marginTop","Item","Name","Information","Img","filteredContacts","map","src","alt","onClick","deleteContact","id","Contacts","useEffect","fetchContacts","loading","length","Loader"],"sourceRoot":""}