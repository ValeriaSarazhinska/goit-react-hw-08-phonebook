{"version":3,"file":"static/js/503.7cdcc18c.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Notification/Notification.js","components/ContactList/ContactList.js","components/pages/Contacts.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const getIsLoading = state => state.contacts.contacts.isLoading;\nexport const getError = state => state.contacts.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n   return  contacts.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n)\n","import { useState } from 'react';\nimport { addContact } from '../../redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport styled from '@mui/material/styles/styled';\n\nexport const Form = styled('form')({\n  display: 'flex',\n  gap: 20,\n  alignItems: 'center',\n  justifyContent: 'left',\n});\n\nexport const Button = styled('button')({\n  backgroundColor: 'forestgreen',\n  border: 'none',\n  color: '#fff',\n  borderRadius: 5,\n  cursor: 'pointer',\n  flexDirection: 'column',\n  fontSize: 15,\n  fontWeight: 500,\n  marginRight: 15,\n  padding: '10px 15px',\n  textAlign: 'center',\n  textTransform: 'capitalize',\n  '&:hover': {\n    backgroundColor: 'green',\n  },\n});\nexport const Input = styled('input')({\n  backgroundColor: 'transparent',\n  border: '1px solid darkblue',\n  fontSize: 14,\n  height: 30,\n  lineHeight: 1.14,\n  width: 170,\n  borderRadius: 5,\n});\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleChangeName = event => {\n    const { value } = event.currentTarget;\n    setName(value);\n  };\n\n  const handleChangeNumber = event => {\n    const { value } = event.currentTarget;\n    setNumber(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const duplicate = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (duplicate) return Notify.failure(`${name} is already in contacts`);\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        value={name}\n        onChange={handleChangeName}\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"Name\"\n      />\n      <Input\n        type=\"tel\"\n        value={number}\n        onChange={handleChangeNumber}\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        placeholder=\"Number\"\n      />\n      <Button type=\"submit\">\n        + Add contact\n      </Button>\n    </Form>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts/contactSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport styled from '@mui/material/styles/styled';\n\nexport const Input = styled('input')({\n  backgroundColor: 'transparent',\n  border: '1px solid darkblue',\n  fontSize: '14px',\n  height: ' 30px',\n  lineHeight: '1.14',\n  width: '170px',\n  borderRadius: '5px',\n});\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilter = event => {\n    dispatch(filterContacts(event.target.value));\n  };\n  return (\n    <Input\n      type='text'\n      value={filter}\n      onChange={handleFilter}\n      name='filter'\n      placeholder='Filter'\n    />\n  );\n}\n","\nconst Notification = ({ message }) => {\n  return <div>{message}</div>;\n};\n\nexport default Notification;\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\nimport styled from '@mui/material/styles/styled';\n\nexport const List = styled('ul')({\n  marginTop: '30px',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '10px',\n});\n\nexport const Item = styled('li')({\n  alignItems: 'center',\n  display: 'flex',\n  width: '500px',\n  gap: '10px',\n});\nconst Button = styled('button')({\n  cursor: 'pointer',\n  padding: '6px 6px',\n  backgroundColor: 'orangered',\n  color: 'white',\n  fontWeight: 500,\n  borderRadius: 5,\n  border: 'none',\n  display: 'flex',\n  justifyContent: 'flex-end',\n  '&:hover': {\n    backgroundColor: 'red',\n  },\n});\nexport const Name = styled('span')({\n  fontWeight: 'bold',\n  color: 'midnightblue',\n});\n\nexport const Information = styled('div')({\n  border: '1px midnightblue solid',\n  padding: '3px',\n  borderRadius: '5px',\n  alignItems: 'center',\n  display: 'flex',\n  gap: '10px',\n});\n\nconst Img = styled('img')({\n  width: 25,\n});\n\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {filteredContacts.map(contact => {\n        return (\n          <Item key={contact.id}>\n            <Information>\n              <Img\n                src={'https://cdn-icons-png.flaticon.com/512/2354/2354573.png'}\n                alt=\"icon\"\n              />\n              <Name>{contact.name}</Name> {contact.number}\n            </Information>\n            <Button\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(contact.id))}\n            >\n              Delete\n            </Button>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from '../ContactForm/ContactForm';\nimport { Filter } from '../Filter/Filter';\nimport Notification from '../Notification/Notification';\nimport ContactList from '../ContactList/ContactList';\nimport Loader from '../Loader/Loader';\nimport { getError, getIsLoading, selectContacts } from '../../redux/contacts/selectors';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { Notify } from 'notiflix';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const error = useSelector(getError);\n  const contacts = useSelector(selectContacts);\n  const loading = useSelector(getIsLoading);\n\n  useEffect(()=>{\n    dispatch(fetchContacts())\n  },[dispatch])\n\n\n  useEffect(()=>{\n    if (error) return Notify.failure(`${error}`);\n  },[error])\n\n  return (\n    <>\n      <main>\n        <div><h1>PhoneBook</h1>\n        <ContactForm />\n         <h2>Contacts</h2>\n          {contacts.length === 0 ? (\n            <Notification message=\"There is no contacts\" />\n          ) : (\n            <div>\n              <Filter />\n              {loading ? <Loader/>: <ContactList />}\n            </div>\n          )}\n      </div>\n         </main>\n    </>\n  );\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFilter","filter","getIsLoading","isLoading","getError","error","selectVisibleContacts","item","toLowerCase","includes","Form","styled","display","gap","alignItems","justifyContent","Button","backgroundColor","border","color","borderRadius","cursor","flexDirection","fontSize","fontWeight","marginRight","padding","textAlign","textTransform","Input","height","lineHeight","width","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","reset","onSubmit","event","preventDefault","some","contact","Notify","addContact","type","onChange","currentTarget","pattern","title","required","placeholder","Filter","filterContacts","target","message","List","marginTop","Item","Name","Information","Img","filteredContacts","src","alt","onClick","deleteContact","id","Contacts","loading","useEffect","fetchContacts","Loader"],"sourceRoot":""}